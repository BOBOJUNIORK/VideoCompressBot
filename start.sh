#!/bin/bash

set -e

echo "üöÄ D√©marrage du syst√®me..."

# V√©rifier les d√©pendances
echo "üîç V√©rification des d√©pendances..."
command -v ffmpeg >/dev/null 2>&1 || { echo "‚ùå FFmpeg non trouv√©"; exit 1; }
command -v python >/dev/null 2>&1 || { echo "‚ùå Python non trouv√©"; exit 1; }
command -v telegram-bot-api >/dev/null 2>&1 || { echo "‚ùå Bot API Server non trouv√©"; exit 1; }

echo "‚úÖ Toutes les d√©pendances sont disponibles"

# Pr√©parer l'environnement
mkdir -p /tmp/bot-api

# D√©marrer le Bot API Server
echo "üîß D√©marrage du Bot API Server..."
telegram-bot-api \
    --local \
    --api-id="${API_ID}" \
    --api-hash="${API_HASH}" \
    --http-port="${BOT_API_SERVER_PORT}" \
    --http-host="${BOT_API_SERVER_HOST}" \
    --dir="/tmp/bot-api" \
    --log-verbosity=1 \
    --log="/tmp/bot-api/server.log" &

# Attendre le d√©marrage
echo "‚è≥ Attente du d√©marrage du serveur..."
sleep 10

# V√©rifier que le serveur r√©pond
MAX_RETRIES=15
for i in $(seq 1 $MAX_RETRIES); do
    if curl -s "http://localhost:${BOT_API_SERVER_PORT}/health" > /dev/null; then
        echo "‚úÖ Bot API Server op√©rationnel"
        break
    fi
    echo "‚è±Ô∏è  Tentative $i/$MAX_RETRIES..."
    sleep 3
done

# D√©marrer le bot
echo "ü§ñ D√©marrage du bot de compression..."
exec python bot.py
